{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// We explicitly import the modular kernels so they get registered in the\n// global registry when we compile the library. A modular build would replace\n// the contents of this file and import only the kernels that are needed.\nimport { registerKernel } from '@tensorflow/tfjs-core';\nimport { _fusedMatMulConfig } from './kernels/_FusedMatMul';\nimport { absConfig } from './kernels/Abs';\nimport { acosConfig } from './kernels/Acos';\nimport { acoshConfig } from './kernels/Acosh';\nimport { addConfig } from './kernels/Add';\nimport { addNConfig } from './kernels/AddN';\nimport { allConfig } from './kernels/All';\nimport { anyConfig } from './kernels/Any';\nimport { argMaxConfig } from './kernels/ArgMax';\nimport { argMinConfig } from './kernels/ArgMin';\nimport { asinConfig } from './kernels/Asin';\nimport { asinhConfig } from './kernels/Asinh';\nimport { atanConfig } from './kernels/Atan';\nimport { atan2Config } from './kernels/Atan2';\nimport { atanhConfig } from './kernels/Atanh';\nimport { avgPoolConfig } from './kernels/AvgPool';\nimport { avgPool3DConfig } from './kernels/AvgPool3D';\nimport { avgPool3DGradConfig } from './kernels/AvgPool3DGrad';\nimport { avgPoolGradConfig } from './kernels/AvgPoolGrad';\nimport { batchMatMulConfig } from './kernels/BatchMatMul';\nimport { batchNormConfig } from './kernels/BatchNorm';\nimport { batchToSpaceNDConfig } from './kernels/BatchToSpaceND';\nimport { bincountConfig } from './kernels/Bincount';\nimport { broadcastArgsConfig } from './kernels/BroadcastArgs';\nimport { castConfig } from './kernels/Cast';\nimport { ceilConfig } from './kernels/Ceil';\nimport { clipByValueConfig } from './kernels/ClipByValue';\nimport { complexConfig } from './kernels/Complex';\nimport { complexAbsConfig } from './kernels/ComplexAbs';\nimport { concatConfig } from './kernels/Concat';\nimport { conv2DConfig } from './kernels/Conv2D';\nimport { conv2DBackpropFilterConfig } from './kernels/Conv2DBackpropFilter';\nimport { conv2DBackpropInputConfig } from './kernels/Conv2DBackpropInput';\nimport { conv3DConfig } from './kernels/Conv3D';\nimport { conv3DBackpropFilterV2Config } from './kernels/Conv3DBackpropFilterV2';\nimport { conv3DBackpropInputV2Config } from './kernels/Conv3DBackpropInputV2';\nimport { cosConfig } from './kernels/Cos';\nimport { coshConfig } from './kernels/Cosh';\nimport { cropAndResizeConfig } from './kernels/CropAndResize';\nimport { cumprodConfig } from './kernels/Cumprod';\nimport { cumsumConfig } from './kernels/Cumsum';\nimport { denseBincountConfig } from './kernels/DenseBincount';\nimport { depthToSpaceConfig } from './kernels/DepthToSpace';\nimport { depthwiseConv2dNativeConfig } from './kernels/DepthwiseConv2dNative';\nimport { depthwiseConv2dNativeBackpropFilterConfig } from './kernels/DepthwiseConv2dNativeBackpropFilter';\nimport { depthwiseConv2dNativeBackpropInputConfig } from './kernels/DepthwiseConv2dNativeBackpropInput';\nimport { diagConfig } from './kernels/Diag';\nimport { dilation2DConfig } from './kernels/Dilation2D';\nimport { dilation2DBackpropFilterConfig } from './kernels/Dilation2DBackpropFilter';\nimport { dilation2DBackpropInputConfig } from './kernels/Dilation2DBackpropInput';\nimport { einsumConfig } from './kernels/Einsum';\nimport { eluConfig } from './kernels/Elu';\nimport { eluGradConfig } from './kernels/EluGrad';\nimport { equalConfig } from './kernels/Equal';\nimport { erfConfig } from './kernels/Erf';\nimport { expConfig } from './kernels/Exp';\nimport { expandDimsConfig } from './kernels/ExpandDims';\nimport { expm1Config } from './kernels/Expm1';\nimport { fftConfig } from './kernels/FFT';\nimport { fillConfig } from './kernels/Fill';\nimport { flipLeftRightConfig } from './kernels/FlipLeftRight';\nimport { floorConfig } from './kernels/Floor';\nimport { floorDivConfig } from './kernels/FloorDiv';\nimport { fusedConv2DConfig } from './kernels/FusedConv2D';\nimport { fusedDepthwiseConv2DConfig } from './kernels/FusedDepthwiseConv2D';\nimport { gatherNdConfig } from './kernels/GatherNd';\nimport { gatherV2Config } from './kernels/GatherV2';\nimport { greaterConfig } from './kernels/Greater';\nimport { greaterEqualConfig } from './kernels/GreaterEqual';\nimport { identityConfig } from './kernels/Identity';\nimport { ifftConfig } from './kernels/IFFT';\nimport { imagConfig } from './kernels/Imag';\nimport { isFiniteConfig } from './kernels/IsFinite';\nimport { isInfConfig } from './kernels/IsInf';\nimport { isNaNConfig } from './kernels/IsNaN';\nimport { leakyReluConfig } from './kernels/LeakyRelu';\nimport { lessConfig } from './kernels/Less';\nimport { lessEqualConfig } from './kernels/LessEqual';\nimport { linSpaceConfig } from './kernels/LinSpace';\nimport { logConfig } from './kernels/Log';\nimport { log1pConfig } from './kernels/Log1p';\nimport { logicalAndConfig } from './kernels/LogicalAnd';\nimport { logicalNotConfig } from './kernels/LogicalNot';\nimport { logicalOrConfig } from './kernels/LogicalOr';\nimport { LRNConfig } from './kernels/LRN';\nimport { LRNGradConfig } from './kernels/LRNGrad';\nimport { maxConfig } from './kernels/Max';\nimport { maximumConfig } from './kernels/Maximum';\nimport { maxPoolConfig } from './kernels/MaxPool';\nimport { maxPool3DConfig } from './kernels/MaxPool3D';\nimport { maxPool3DGradConfig } from './kernels/MaxPool3DGrad';\nimport { maxPoolGradConfig } from './kernels/MaxPoolGrad';\nimport { maxPoolWithArgmaxConfig } from './kernels/MaxPoolWithArgmax';\nimport { meanConfig } from './kernels/Mean';\nimport { minConfig } from './kernels/Min';\nimport { minimumConfig } from './kernels/Minimum';\nimport { mirrorPadConfig } from './kernels/MirrorPad';\nimport { modConfig } from './kernels/Mod';\nimport { multinomialConfig } from './kernels/Multinomial';\nimport { multiplyConfig } from './kernels/Multiply';\nimport { negConfig } from './kernels/Neg';\nimport { nonMaxSuppressionV3Config } from './kernels/NonMaxSuppressionV3';\nimport { nonMaxSuppressionV4Config } from './kernels/NonMaxSuppressionV4';\nimport { nonMaxSuppressionV5Config } from './kernels/NonMaxSuppressionV5';\nimport { notEqualConfig } from './kernels/NotEqual';\nimport { oneHotConfig } from './kernels/OneHot';\nimport { onesLikeConfig } from './kernels/OnesLike';\nimport { packConfig } from './kernels/Pack';\nimport { padV2Config } from './kernels/PadV2';\nimport { powConfig } from './kernels/Pow';\nimport { preluConfig } from './kernels/Prelu';\nimport { prodConfig } from './kernels/Prod';\nimport { rangeConfig } from './kernels/Range';\nimport { realConfig } from './kernels/Real';\nimport { realDivConfig } from './kernels/RealDiv';\nimport { reciprocalConfig } from './kernels/Reciprocal';\nimport { reluConfig } from './kernels/Relu';\nimport { relu6Config } from './kernels/Relu6';\nimport { reshapeConfig } from './kernels/Reshape';\nimport { resizeBilinearConfig } from './kernels/ResizeBilinear';\nimport { resizeBilinearGradConfig } from './kernels/ResizeBilinearGrad';\nimport { resizeNearestNeighborConfig } from './kernels/ResizeNearestNeighbor';\nimport { resizeNearestNeighborGradConfig } from './kernels/ResizeNearestNeighborGrad';\nimport { reverseConfig } from './kernels/Reverse';\nimport { rotateWithOffsetConfig } from './kernels/RotateWithOffset';\nimport { roundConfig } from './kernels/Round';\nimport { rsqrtConfig } from './kernels/Rsqrt';\nimport { scatterNdConfig } from './kernels/ScatterNd';\nimport { selectConfig } from './kernels/Select';\nimport { seluConfig } from './kernels/Selu';\nimport { sigmoidConfig } from './kernels/Sigmoid';\nimport { signConfig } from './kernels/Sign';\nimport { sinConfig } from './kernels/Sin';\nimport { sinhConfig } from './kernels/Sinh';\nimport { sliceConfig } from './kernels/Slice';\nimport { softmaxConfig } from './kernels/Softmax';\nimport { softplusConfig } from './kernels/Softplus';\nimport { spaceToBatchNDConfig } from './kernels/SpaceToBatchND';\nimport { sparseFillEmptyRowsConfig } from './kernels/SparseFillEmptyRows';\nimport { sparseReshapeConfig } from './kernels/SparseReshape';\nimport { sparseSegmentMeanConfig } from './kernels/SparseSegmentMean';\nimport { sparseSegmentSumConfig } from './kernels/SparseSegmentSum';\nimport { sparseToDenseConfig } from './kernels/SparseToDense';\nimport { splitVConfig } from './kernels/SplitV';\nimport { sqrtConfig } from './kernels/Sqrt';\nimport { squareConfig } from './kernels/Square';\nimport { squaredDifferenceConfig } from './kernels/SquaredDifference';\nimport { stepConfig } from './kernels/Step';\nimport { stridedSliceConfig } from './kernels/StridedSlice';\nimport { stringNGramsConfig } from './kernels/StringNGrams';\nimport { stringSplitConfig } from './kernels/StringSplit';\nimport { stringToHashBucketFastConfig } from './kernels/StringToHashBucketFast';\nimport { subConfig } from './kernels/Sub';\nimport { sumConfig } from './kernels/Sum';\nimport { tanConfig } from './kernels/Tan';\nimport { tanhConfig } from './kernels/Tanh';\nimport { tileConfig } from './kernels/Tile';\nimport { topKConfig } from './kernels/TopK';\nimport { transformConfig } from './kernels/Transform';\nimport { transposeConfig } from './kernels/Transpose';\nimport { uniqueConfig } from './kernels/Unique';\nimport { unpackConfig } from './kernels/Unpack';\nimport { unsortedSegmentSumConfig } from './kernels/UnsortedSegmentSum';\nimport { zerosLikeConfig } from './kernels/ZerosLike'; // List all kernel configs here\n\nconst kernelConfigs = [_fusedMatMulConfig, absConfig, acosConfig, acoshConfig, addConfig, addNConfig, allConfig, anyConfig, argMaxConfig, argMinConfig, asinConfig, asinhConfig, atanConfig, atan2Config, atanhConfig, avgPoolConfig, avgPool3DConfig, avgPool3DGradConfig, avgPoolGradConfig, batchMatMulConfig, batchNormConfig, batchToSpaceNDConfig, bincountConfig, broadcastArgsConfig, castConfig, ceilConfig, clipByValueConfig, complexConfig, complexAbsConfig, concatConfig, conv2DConfig, conv2DBackpropFilterConfig, conv2DBackpropInputConfig, conv3DConfig, conv3DBackpropFilterV2Config, conv3DBackpropInputV2Config, cosConfig, coshConfig, cropAndResizeConfig, cumprodConfig, cumsumConfig, denseBincountConfig, depthToSpaceConfig, depthwiseConv2dNativeConfig, depthwiseConv2dNativeBackpropFilterConfig, depthwiseConv2dNativeBackpropInputConfig, diagConfig, dilation2DConfig, dilation2DBackpropFilterConfig, dilation2DBackpropInputConfig, einsumConfig, eluConfig, eluGradConfig, equalConfig, erfConfig, expConfig, expandDimsConfig, expm1Config, fftConfig, fillConfig, flipLeftRightConfig, floorConfig, floorDivConfig, fusedConv2DConfig, fusedDepthwiseConv2DConfig, gatherNdConfig, gatherV2Config, greaterConfig, greaterEqualConfig, identityConfig, ifftConfig, imagConfig, isFiniteConfig, isInfConfig, isNaNConfig, leakyReluConfig, lessConfig, lessEqualConfig, linSpaceConfig, logConfig, log1pConfig, logicalAndConfig, logicalNotConfig, logicalOrConfig, LRNConfig, LRNGradConfig, maxConfig, maximumConfig, maxPoolConfig, maxPool3DConfig, maxPool3DGradConfig, maxPoolGradConfig, maxPoolWithArgmaxConfig, meanConfig, minConfig, minimumConfig, mirrorPadConfig, modConfig, multinomialConfig, multiplyConfig, negConfig, nonMaxSuppressionV3Config, nonMaxSuppressionV4Config, nonMaxSuppressionV5Config, notEqualConfig, oneHotConfig, onesLikeConfig, packConfig, padV2Config, powConfig, preluConfig, prodConfig, rangeConfig, realConfig, realDivConfig, reciprocalConfig, reluConfig, relu6Config, reshapeConfig, resizeBilinearConfig, resizeBilinearGradConfig, resizeNearestNeighborConfig, resizeNearestNeighborGradConfig, reverseConfig, rotateWithOffsetConfig, roundConfig, rsqrtConfig, scatterNdConfig, selectConfig, seluConfig, sigmoidConfig, signConfig, sinConfig, sinhConfig, sliceConfig, softmaxConfig, softplusConfig, spaceToBatchNDConfig, sparseFillEmptyRowsConfig, sparseReshapeConfig, sparseSegmentMeanConfig, sparseSegmentSumConfig, sparseToDenseConfig, splitVConfig, sqrtConfig, squareConfig, squaredDifferenceConfig, stepConfig, stridedSliceConfig, stringNGramsConfig, stringSplitConfig, stringToHashBucketFastConfig, subConfig, sumConfig, tanConfig, tanhConfig, tileConfig, topKConfig, transformConfig, transposeConfig, uniqueConfig, unpackConfig, unsortedSegmentSumConfig, zerosLikeConfig];\n\nfor (const kernelConfig of kernelConfigs) {\n  registerKernel(kernelConfig);\n}","map":{"version":3,"mappings":"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","names":["registerKernel","_fusedMatMulConfig","absConfig","acosConfig","acoshConfig","addConfig","addNConfig","allConfig","anyConfig","argMaxConfig","argMinConfig","asinConfig","asinhConfig","atanConfig","atan2Config","atanhConfig","avgPoolConfig","avgPool3DConfig","avgPool3DGradConfig","avgPoolGradConfig","batchMatMulConfig","batchNormConfig","batchToSpaceNDConfig","bincountConfig","broadcastArgsConfig","castConfig","ceilConfig","clipByValueConfig","complexConfig","complexAbsConfig","concatConfig","conv2DConfig","conv2DBackpropFilterConfig","conv2DBackpropInputConfig","conv3DConfig","conv3DBackpropFilterV2Config","conv3DBackpropInputV2Config","cosConfig","coshConfig","cropAndResizeConfig","cumprodConfig","cumsumConfig","denseBincountConfig","depthToSpaceConfig","depthwiseConv2dNativeConfig","depthwiseConv2dNativeBackpropFilterConfig","depthwiseConv2dNativeBackpropInputConfig","diagConfig","dilation2DConfig","dilation2DBackpropFilterConfig","dilation2DBackpropInputConfig","einsumConfig","eluConfig","eluGradConfig","equalConfig","erfConfig","expConfig","expandDimsConfig","expm1Config","fftConfig","fillConfig","flipLeftRightConfig","floorConfig","floorDivConfig","fusedConv2DConfig","fusedDepthwiseConv2DConfig","gatherNdConfig","gatherV2Config","greaterConfig","greaterEqualConfig","identityConfig","ifftConfig","imagConfig","isFiniteConfig","isInfConfig","isNaNConfig","leakyReluConfig","lessConfig","lessEqualConfig","linSpaceConfig","logConfig","log1pConfig","logicalAndConfig","logicalNotConfig","logicalOrConfig","LRNConfig","LRNGradConfig","maxConfig","maximumConfig","maxPoolConfig","maxPool3DConfig","maxPool3DGradConfig","maxPoolGradConfig","maxPoolWithArgmaxConfig","meanConfig","minConfig","minimumConfig","mirrorPadConfig","modConfig","multinomialConfig","multiplyConfig","negConfig","nonMaxSuppressionV3Config","nonMaxSuppressionV4Config","nonMaxSuppressionV5Config","notEqualConfig","oneHotConfig","onesLikeConfig","packConfig","padV2Config","powConfig","preluConfig","prodConfig","rangeConfig","realConfig","realDivConfig","reciprocalConfig","reluConfig","relu6Config","reshapeConfig","resizeBilinearConfig","resizeBilinearGradConfig","resizeNearestNeighborConfig","resizeNearestNeighborGradConfig","reverseConfig","rotateWithOffsetConfig","roundConfig","rsqrtConfig","scatterNdConfig","selectConfig","seluConfig","sigmoidConfig","signConfig","sinConfig","sinhConfig","sliceConfig","softmaxConfig","softplusConfig","spaceToBatchNDConfig","sparseFillEmptyRowsConfig","sparseReshapeConfig","sparseSegmentMeanConfig","sparseSegmentSumConfig","sparseToDenseConfig","splitVConfig","sqrtConfig","squareConfig","squaredDifferenceConfig","stepConfig","stridedSliceConfig","stringNGramsConfig","stringSplitConfig","stringToHashBucketFastConfig","subConfig","sumConfig","tanConfig","tanhConfig","tileConfig","topKConfig","transformConfig","transposeConfig","uniqueConfig","unpackConfig","unsortedSegmentSumConfig","zerosLikeConfig","kernelConfigs","kernelConfig"],"sources":["C:\\Users\\atiqu\\OneDrive\\Desktop\\project_faceDetection\\tfjs-backend-cpu\\src\\register_all_kernels.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// We explicitly import the modular kernels so they get registered in the\n// global registry when we compile the library. A modular build would replace\n// the contents of this file and import only the kernels that are needed.\nimport { KernelConfig, registerKernel } from '@tensorflow/tfjs-core';\n\nimport {_fusedMatMulConfig} from './kernels/_FusedMatMul';\nimport {absConfig} from './kernels/Abs';\nimport {acosConfig} from './kernels/Acos';\nimport {acoshConfig} from './kernels/Acosh';\nimport {addConfig} from './kernels/Add';\nimport {addNConfig} from './kernels/AddN';\nimport {allConfig} from './kernels/All';\nimport {anyConfig} from './kernels/Any';\nimport {argMaxConfig} from './kernels/ArgMax';\nimport {argMinConfig} from './kernels/ArgMin';\nimport {asinConfig} from './kernels/Asin';\nimport {asinhConfig} from './kernels/Asinh';\nimport {atanConfig} from './kernels/Atan';\nimport {atan2Config} from './kernels/Atan2';\nimport {atanhConfig} from './kernels/Atanh';\nimport {avgPoolConfig} from './kernels/AvgPool';\nimport {avgPool3DConfig} from './kernels/AvgPool3D';\nimport {avgPool3DGradConfig} from './kernels/AvgPool3DGrad';\nimport {avgPoolGradConfig} from './kernels/AvgPoolGrad';\nimport {batchMatMulConfig} from './kernels/BatchMatMul';\nimport {batchNormConfig} from './kernels/BatchNorm';\nimport {batchToSpaceNDConfig} from './kernels/BatchToSpaceND';\nimport {bincountConfig} from './kernels/Bincount';\nimport {broadcastArgsConfig} from './kernels/BroadcastArgs';\nimport {castConfig} from './kernels/Cast';\nimport {ceilConfig} from './kernels/Ceil';\nimport {clipByValueConfig} from './kernels/ClipByValue';\nimport {complexConfig} from './kernels/Complex';\nimport {complexAbsConfig} from './kernels/ComplexAbs';\nimport {concatConfig} from './kernels/Concat';\nimport {conv2DConfig} from './kernels/Conv2D';\nimport {conv2DBackpropFilterConfig} from './kernels/Conv2DBackpropFilter';\nimport {conv2DBackpropInputConfig} from './kernels/Conv2DBackpropInput';\nimport {conv3DConfig} from './kernels/Conv3D';\nimport {conv3DBackpropFilterV2Config} from './kernels/Conv3DBackpropFilterV2';\nimport {conv3DBackpropInputV2Config} from './kernels/Conv3DBackpropInputV2';\nimport {cosConfig} from './kernels/Cos';\nimport {coshConfig} from './kernels/Cosh';\nimport {cropAndResizeConfig} from './kernels/CropAndResize';\nimport {cumprodConfig} from './kernels/Cumprod';\nimport {cumsumConfig} from './kernels/Cumsum';\nimport {denseBincountConfig} from './kernels/DenseBincount';\nimport {depthToSpaceConfig} from './kernels/DepthToSpace';\nimport {depthwiseConv2dNativeConfig} from './kernels/DepthwiseConv2dNative';\nimport {depthwiseConv2dNativeBackpropFilterConfig} from './kernels/DepthwiseConv2dNativeBackpropFilter';\nimport {depthwiseConv2dNativeBackpropInputConfig} from './kernels/DepthwiseConv2dNativeBackpropInput';\nimport {diagConfig} from './kernels/Diag';\nimport {dilation2DConfig} from './kernels/Dilation2D';\nimport {dilation2DBackpropFilterConfig} from './kernels/Dilation2DBackpropFilter';\nimport {dilation2DBackpropInputConfig} from './kernels/Dilation2DBackpropInput';\nimport {einsumConfig} from './kernels/Einsum';\nimport {eluConfig} from './kernels/Elu';\nimport {eluGradConfig} from './kernels/EluGrad';\nimport {equalConfig} from './kernels/Equal';\nimport {erfConfig} from './kernels/Erf';\nimport {expConfig} from './kernels/Exp';\nimport {expandDimsConfig} from './kernels/ExpandDims';\nimport {expm1Config} from './kernels/Expm1';\nimport {fftConfig} from './kernels/FFT';\nimport {fillConfig} from './kernels/Fill';\nimport {flipLeftRightConfig} from './kernels/FlipLeftRight';\nimport {floorConfig} from './kernels/Floor';\nimport {floorDivConfig} from './kernels/FloorDiv';\nimport {fusedConv2DConfig} from './kernels/FusedConv2D';\nimport {fusedDepthwiseConv2DConfig} from './kernels/FusedDepthwiseConv2D';\nimport {gatherNdConfig} from './kernels/GatherNd';\nimport {gatherV2Config} from './kernels/GatherV2';\nimport {greaterConfig} from './kernels/Greater';\nimport {greaterEqualConfig} from './kernels/GreaterEqual';\nimport {identityConfig} from './kernels/Identity';\nimport {ifftConfig} from './kernels/IFFT';\nimport {imagConfig} from './kernels/Imag';\nimport {isFiniteConfig} from './kernels/IsFinite';\nimport {isInfConfig} from './kernels/IsInf';\nimport {isNaNConfig} from './kernels/IsNaN';\nimport {leakyReluConfig} from './kernels/LeakyRelu';\nimport {lessConfig} from './kernels/Less';\nimport {lessEqualConfig} from './kernels/LessEqual';\nimport {linSpaceConfig} from './kernels/LinSpace';\nimport {logConfig} from './kernels/Log';\nimport {log1pConfig} from './kernels/Log1p';\nimport {logicalAndConfig} from './kernels/LogicalAnd';\nimport {logicalNotConfig} from './kernels/LogicalNot';\nimport {logicalOrConfig} from './kernels/LogicalOr';\nimport {LRNConfig} from './kernels/LRN';\nimport {LRNGradConfig} from './kernels/LRNGrad';\nimport {maxConfig} from './kernels/Max';\nimport {maximumConfig} from './kernels/Maximum';\nimport {maxPoolConfig} from './kernels/MaxPool';\nimport {maxPool3DConfig} from './kernels/MaxPool3D';\nimport {maxPool3DGradConfig} from './kernels/MaxPool3DGrad';\nimport {maxPoolGradConfig} from './kernels/MaxPoolGrad';\nimport {maxPoolWithArgmaxConfig} from './kernels/MaxPoolWithArgmax';\nimport {meanConfig} from './kernels/Mean';\nimport {minConfig} from './kernels/Min';\nimport {minimumConfig} from './kernels/Minimum';\nimport {mirrorPadConfig} from './kernels/MirrorPad';\nimport {modConfig} from './kernels/Mod';\nimport {multinomialConfig} from './kernels/Multinomial';\nimport {multiplyConfig} from './kernels/Multiply';\nimport {negConfig} from './kernels/Neg';\nimport {nonMaxSuppressionV3Config} from './kernels/NonMaxSuppressionV3';\nimport {nonMaxSuppressionV4Config} from './kernels/NonMaxSuppressionV4';\nimport {nonMaxSuppressionV5Config} from './kernels/NonMaxSuppressionV5';\nimport {notEqualConfig} from './kernels/NotEqual';\nimport {oneHotConfig} from './kernels/OneHot';\nimport {onesLikeConfig} from './kernels/OnesLike';\nimport {packConfig} from './kernels/Pack';\nimport {padV2Config} from './kernels/PadV2';\nimport {powConfig} from './kernels/Pow';\nimport {preluConfig} from './kernels/Prelu';\nimport {prodConfig} from './kernels/Prod';\nimport {rangeConfig} from './kernels/Range';\nimport {realConfig} from './kernels/Real';\nimport {realDivConfig} from './kernels/RealDiv';\nimport {reciprocalConfig} from './kernels/Reciprocal';\nimport {reluConfig} from './kernels/Relu';\nimport {relu6Config} from './kernels/Relu6';\nimport {reshapeConfig} from './kernels/Reshape';\nimport {resizeBilinearConfig} from './kernels/ResizeBilinear';\nimport {resizeBilinearGradConfig} from './kernels/ResizeBilinearGrad';\nimport {resizeNearestNeighborConfig} from './kernels/ResizeNearestNeighbor';\nimport {resizeNearestNeighborGradConfig} from './kernels/ResizeNearestNeighborGrad';\nimport {reverseConfig} from './kernels/Reverse';\nimport {rotateWithOffsetConfig} from './kernels/RotateWithOffset';\nimport {roundConfig} from './kernels/Round';\nimport {rsqrtConfig} from './kernels/Rsqrt';\nimport {scatterNdConfig} from './kernels/ScatterNd';\nimport {selectConfig} from './kernels/Select';\nimport {seluConfig} from './kernels/Selu';\nimport {sigmoidConfig} from './kernels/Sigmoid';\nimport {signConfig} from './kernels/Sign';\nimport {sinConfig} from './kernels/Sin';\nimport {sinhConfig} from './kernels/Sinh';\nimport {sliceConfig} from './kernels/Slice';\nimport {softmaxConfig} from './kernels/Softmax';\nimport {softplusConfig} from './kernels/Softplus';\nimport {spaceToBatchNDConfig} from './kernels/SpaceToBatchND';\nimport {sparseFillEmptyRowsConfig} from './kernels/SparseFillEmptyRows';\nimport {sparseReshapeConfig} from './kernels/SparseReshape';\nimport {sparseSegmentMeanConfig} from './kernels/SparseSegmentMean';\nimport {sparseSegmentSumConfig} from './kernels/SparseSegmentSum';\nimport {sparseToDenseConfig} from './kernels/SparseToDense';\nimport {splitVConfig} from './kernels/SplitV';\nimport {sqrtConfig} from './kernels/Sqrt';\nimport {squareConfig} from './kernels/Square';\nimport {squaredDifferenceConfig} from './kernels/SquaredDifference';\nimport {stepConfig} from './kernels/Step';\nimport {stridedSliceConfig} from './kernels/StridedSlice';\nimport {stringNGramsConfig} from './kernels/StringNGrams';\nimport {stringSplitConfig} from './kernels/StringSplit';\nimport {stringToHashBucketFastConfig} from './kernels/StringToHashBucketFast';\nimport {subConfig} from './kernels/Sub';\nimport {sumConfig} from './kernels/Sum';\nimport {tanConfig} from './kernels/Tan';\nimport {tanhConfig} from './kernels/Tanh';\nimport {tileConfig} from './kernels/Tile';\nimport {topKConfig} from './kernels/TopK';\nimport {transformConfig} from './kernels/Transform';\nimport {transposeConfig} from './kernels/Transpose';\nimport {uniqueConfig} from './kernels/Unique';\nimport {unpackConfig} from './kernels/Unpack';\nimport {unsortedSegmentSumConfig} from './kernels/UnsortedSegmentSum';\nimport {zerosLikeConfig} from './kernels/ZerosLike';\n\n// List all kernel configs here\nconst kernelConfigs: KernelConfig[] = [\n  _fusedMatMulConfig,\n  absConfig,\n  acosConfig,\n  acoshConfig,\n  addConfig,\n  addNConfig,\n  allConfig,\n  anyConfig,\n  argMaxConfig,\n  argMinConfig,\n  asinConfig,\n  asinhConfig,\n  atanConfig,\n  atan2Config,\n  atanhConfig,\n  avgPoolConfig,\n  avgPool3DConfig,\n  avgPool3DGradConfig,\n  avgPoolGradConfig,\n  batchMatMulConfig,\n  batchNormConfig,\n  batchToSpaceNDConfig,\n  bincountConfig,\n  broadcastArgsConfig,\n  castConfig,\n  ceilConfig,\n  clipByValueConfig,\n  complexConfig,\n  complexAbsConfig,\n  concatConfig,\n  conv2DConfig,\n  conv2DBackpropFilterConfig,\n  conv2DBackpropInputConfig,\n  conv3DConfig,\n  conv3DBackpropFilterV2Config,\n  conv3DBackpropInputV2Config,\n  cosConfig,\n  coshConfig,\n  cropAndResizeConfig,\n  cumprodConfig,\n  cumsumConfig,\n  denseBincountConfig,\n  depthToSpaceConfig,\n  depthwiseConv2dNativeConfig,\n  depthwiseConv2dNativeBackpropFilterConfig,\n  depthwiseConv2dNativeBackpropInputConfig,\n  diagConfig,\n  dilation2DConfig,\n  dilation2DBackpropFilterConfig,\n  dilation2DBackpropInputConfig,\n  einsumConfig,\n  eluConfig,\n  eluGradConfig,\n  equalConfig,\n  erfConfig,\n  expConfig,\n  expandDimsConfig,\n  expm1Config,\n  fftConfig,\n  fillConfig,\n  flipLeftRightConfig,\n  floorConfig,\n  floorDivConfig,\n  fusedConv2DConfig,\n  fusedDepthwiseConv2DConfig,\n  gatherNdConfig,\n  gatherV2Config,\n  greaterConfig,\n  greaterEqualConfig,\n  identityConfig,\n  ifftConfig,\n  imagConfig,\n  isFiniteConfig,\n  isInfConfig,\n  isNaNConfig,\n  leakyReluConfig,\n  lessConfig,\n  lessEqualConfig,\n  linSpaceConfig,\n  logConfig,\n  log1pConfig,\n  logicalAndConfig,\n  logicalNotConfig,\n  logicalOrConfig,\n  LRNConfig,\n  LRNGradConfig,\n  maxConfig,\n  maximumConfig,\n  maxPoolConfig,\n  maxPool3DConfig,\n  maxPool3DGradConfig,\n  maxPoolGradConfig,\n  maxPoolWithArgmaxConfig,\n  meanConfig,\n  minConfig,\n  minimumConfig,\n  mirrorPadConfig,\n  modConfig,\n  multinomialConfig,\n  multiplyConfig,\n  negConfig,\n  nonMaxSuppressionV3Config,\n  nonMaxSuppressionV4Config,\n  nonMaxSuppressionV5Config,\n  notEqualConfig,\n  oneHotConfig,\n  onesLikeConfig,\n  packConfig,\n  padV2Config,\n  powConfig,\n  preluConfig,\n  prodConfig,\n  rangeConfig,\n  realConfig,\n  realDivConfig,\n  reciprocalConfig,\n  reluConfig,\n  relu6Config,\n  reshapeConfig,\n  resizeBilinearConfig,\n  resizeBilinearGradConfig,\n  resizeNearestNeighborConfig,\n  resizeNearestNeighborGradConfig,\n  reverseConfig,\n  rotateWithOffsetConfig,\n  roundConfig,\n  rsqrtConfig,\n  scatterNdConfig,\n  selectConfig,\n  seluConfig,\n  sigmoidConfig,\n  signConfig,\n  sinConfig,\n  sinhConfig,\n  sliceConfig,\n  softmaxConfig,\n  softplusConfig,\n  spaceToBatchNDConfig,\n  sparseFillEmptyRowsConfig,\n  sparseReshapeConfig,\n  sparseSegmentMeanConfig,\n  sparseSegmentSumConfig,\n  sparseToDenseConfig,\n  splitVConfig,\n  sqrtConfig,\n  squareConfig,\n  squaredDifferenceConfig,\n  stepConfig,\n  stridedSliceConfig,\n  stringNGramsConfig,\n  stringSplitConfig,\n  stringToHashBucketFastConfig,\n  subConfig,\n  sumConfig,\n  tanConfig,\n  tanhConfig,\n  tileConfig,\n  topKConfig,\n  transformConfig,\n  transposeConfig,\n  uniqueConfig,\n  unpackConfig,\n  unsortedSegmentSumConfig,\n  zerosLikeConfig\n];\n\nfor (const kernelConfig of kernelConfigs) {\n  registerKernel(kernelConfig);\n}\n"]},"metadata":{},"sourceType":"module"}